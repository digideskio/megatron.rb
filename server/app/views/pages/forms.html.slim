- main_header "Forms"

- main
  p The form helpers are being reworked, this page will be updated as they are developed.

  = heading 'Check switch'

  .check-switch
    input.switch#check-switch-test type='checkbox' checked=true
    label for='check-switch-test' Enable

  .check-switch
    input.switch#check-switch-test-3 type='checkbox'
    label for='check-switch-test-3' Enable

  .check-switch
    input.switch#check-switch-test type='checkbox' disabled=true checked=true
    label for='check-switch-test-2' Enable

  .check-switch
    input.switch#check-switch-test-4 type='checkbox' disabled=true
    label for='check-switch-test-4' Enable

  = heading 'Slider (Range) Input'

  markdown:
    This component is powered by [compose-slider](https://github.com/compose-ui/slider) and a Rails view helper in Megatron.

  = heading :h5, 'Basic usage'

  code: slim
    = slider_input_tag 'name', [options]
    / Name should be the input name, eg. 'some_model[some_property]'

  = heading :h5, 'Options'

  = markdown_table
    | Option | Type/Value | Example & Description |
    |:-|:-|:-|
    | min                     | Default: `0`      | Set a min value |
    | max                     | Default: `100`    | Set a max value |
    | value                   | Default: `0`      | Set a starting value |
    | values                  | `Array`           | `[1, 2, 5, …]` - Use custom values to set arbitrary values on a hidden input. <br> By default slider inputs can only have number values (min - max) |
    | before                  | `String`          | `'$'` - Put a `$` before the label.
    | after                   | `String`          | `'GB'` - Put `GB` after the label.
    | mark                    | `Array`           | `[1, 5, 10]` - Mark the first, fifth and 10th points. |
    | labels                  | `Array` or `Hash` | `{ disk: ['1GB, '2GB', …], price: ['$15', '$20', …] }` - Show custom labels. Use a hash for multiline labels. |
    | external_labels         | `Hash`            | `{ ram: ['256GB', '512GB', …] }` - Set contents of elements with `data-slider-label='ram'`. |
    | line_labels             | `Array`           | `[0: '1GB', 9: '256GB']` - Set a permanent "floating" label on the 1st and 10th point on the slider. |

  p Note: It's a bit of a hack, but if you use `big` or `small` in your hash keys for `labels` it will affect the label font size.

  = heading 'Demos'

  = demo_box "A simple slider"
    = slider_input_tag 'number'

  = demo_box "Slider with after label and markings"
    = slider_input_tag 'percent', after: '%', mark: [1, 50, 100]

  p Each of the demos below is using the following data.

  code: ruby
    disk = ['1GB','2GB','5GB','15GB','50GB']
    price = ['$10/mo', '$20/mo', '$50/mo', '$1,500/mo', '$5,000/mo']

  - disk = ['1GB','2GB','5GB','15GB','50GB']
  - price = ['$10/mo', '$20/mo', '$50/mo', '$1,500/mo', '$5,000/mo']


  = demo_box "Slider with line labels"
    = slider_input_tag 'deployment1[units]', labels: disk, line_labels: {'1' => '1GB', '3' => '5GB', '5' => '50GB'}

  = demo_box "Slider with two labels (using size hack)"
    = slider_input_tag 'deployment2[units]', labels: { big_disk: disk, small_price: price }

  = demo_box "Slider with external labels and custom values"
    = slider_input_tag 'deployment3[units]', labels: { size: disk }, external_labels: { disk: disk, price: price }, values: [1, 2, 5, 15, 50], mark: [1,3,5]
    p With <strong data-slider-label='disk'></strong> your price will be <strong data-slider-label='price'></strong>.
    p.help-text Use the web inspector and you'll see a hidden input being updated as the slider changes.
